(()=>{var t={388:t=>{class s{constructor({radius:t}){this.x=null,this.y=null,this.radius=t,this.mass=4*Math.PI/3*Math.pow(this.radius,3)}updateRadius(t){this.radius=t,this.mass=4*Math.PI/3*Math.pow(this.radius,3)}}class i{constructor({radius:t,radian:s,prevPart:i,x:h,y:e}){this.x=h,this.y=e,this.radian=s,this.radius=t,this.mass=4*Math.PI/3*Math.pow(this.radius,3),this.prevPart=i,this.prevPart.x=this.x+1.3*this.radius*10*Math.cos(this.radian),this.prevPart.y=this.y+1.3*this.radius*10*Math.sin(this.radian),this.nextPart=null}setNextPart(t){return null===this.nextPart&&(this.nextPart=t,!0)}updateRadius(t){this.radius=t,this.mass=4*Math.PI/3*Math.pow(this.radius,3)}getPoint(t,s){return[this.x+t*Math.cos(s+this.radian),this.y+t*Math.sin(s+this.radian)]}move(t,s){this.nextPart.move(t,s),this.radian=this.nextPart.radian,this.x=this.nextPart.x+10*this.radius*Math.cos(this.radian),this.y=this.nextPart.y+10*this.radius*Math.sin(this.radian),this.prevPart.x=this.x+1.3*this.radius*10*Math.cos(this.radian),this.prevPart.y=this.y+1.3*this.radius*10*Math.sin(this.radian)}}class h{constructor({radius:t,prevPart:s,segmentLength:i,fish:h}){this.prevPart=s,this.segmentLength=i,this.nextPart=null,this.commitMove=0,this.dirCount=0,this.x=this.prevPart.x+this.segmentLength*Math.cos(this.prevPart.radian+Math.PI),this.y=this.prevPart.y+this.segmentLength*Math.sin(this.prevPart.radian+Math.PI),this.atTarget=null,this.radius=t,this.mass=4*Math.PI/3*Math.pow(this.radius,3),this.maxAngle=Math.PI/Math.pow(Math.log(h.mass),1.1),this.maxAngle=this.radius*this.radius/this.mass*this.maxAngle,this.moveAngle=this.maxAngle/3,this.commitMax=3+Math.floor(Math.pow(h.mass,.4)),this.updateRadian()}updateRadian(){const t=this.prevPart.x-this.x,s=this.prevPart.y-this.y;0===t&&(s<0&&(this.radian=3*Math.PI/2),this.radian=Math.PI/2);const i=Math.atan(s/t);this.radian=t>0?i:-Math.PI+i}setNextPart(t){return null===this.nextPart&&(this.nextPart=t,!0)}updateRadius(t,s){this.radius=t,this.mass=4*Math.PI/3*Math.pow(this.radius,3),this.maxAngle=Math.PI/Math.pow(Math.log(s.mass),1),this.maxAngle=this.radius*this.radius/this.mass*this.maxAngle,this.moveAngle=this.maxAngle/3,this.commitMax=1+Math.floor(Math.pow(s.mass,1/2.7)),this.updateRadian()}rotate(t){const s=Math.sin(t),i=Math.cos(t),h=this.x-this.prevPart.x,e=this.y-this.prevPart.y;this.x=h*i-e*s+this.prevPart.x,this.y=h*s+e*i+this.prevPart.y}act(t){let s=this.x,i=this.y;this.updateRadian();let h=this.radian-this.prevPart.radian;if(h>Math.PI?h-=2*Math.PI:h<-Math.PI&&(h+=2*Math.PI),Math.abs(h)>this.maxAngle)if(this.commitMove=0,h>0)if(h-this.maxAngle>2*this.moveAngle){const t=this.prevPart.radian+Math.PI+.8*this.maxAngle;this.x=this.prevPart.x+this.segmentLength*Math.cos(t),this.y=this.prevPart.y+this.segmentLength*Math.sin(t)}else this.x=this.prevPart.x+this.segmentLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+this.segmentLength*Math.sin(this.radian+Math.PI),this.rotate(-this.moveAngle);else if(h+this.maxAngle<2*-this.moveAngle){const t=this.prevPart.radian+Math.PI-.8*this.maxAngle;this.x=this.prevPart.x+this.segmentLength*Math.cos(t),this.y=this.prevPart.y+this.segmentLength*Math.sin(t)}else this.x=this.prevPart.x+this.segmentLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+this.segmentLength*Math.sin(this.radian+Math.PI),this.rotate(this.moveAngle);else this.x=this.prevPart.x+this.segmentLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+this.segmentLength*Math.sin(this.radian+Math.PI),h=this.radian-t.targetDir,h>Math.PI?h-=2*Math.PI:h<-Math.PI&&(h+=2*Math.PI),this.commitMove<0?(this.rotate(-this.moveAngle),this.commitMove+=1):this.commitMove>0?(this.rotate(this.moveAngle),this.commitMove-=1):h>0?(h<.1&&(this.commitMove=-this.commitMax),this.rotate(-this.moveAngle),this.dirCount>2*this.commitMax?(this.commitMove=1+Math.floor(this.commitMax/3),this.dirCount=0):this.dirCount>0?this.dirCount++:this.dirCount=1):(h>-.1&&(this.commitMove=this.commitMax),this.rotate(this.moveAngle),this.dirCount<-2*this.commitMax?(this.commitMove=-1-Math.floor(this.commitMax/3),this.dirCount=0):this.dirCount<0?this.dirCount--:this.dirCount=-1);if(this.updateRadian(),this.nextPart){const h=this.mass/t.mass;t.newvelx+=(s-this.x)*h,t.newvely+=(i-this.y)*h,this.nextPart.act(t)}else{let h=0;t.target&&t.target.getDistance(t.mouth.x,t.mouth.y)>300&&(h=5/t.mass*(1-50/t.target.getDistance(t.mouth.x,t.mouth.y)));let e=t.parts[0].radian-t.targetDir;e>Math.PI?e-=2*Math.PI:e<-Math.PI&&(e+=2*Math.PI);const a=this.mass/t.mass,r=s-this.x,n=i-this.y;t.newvelx+=r*a,t.newvely+=n*a,this.atTarget=Math.pow(1-2*Math.abs(e)/Math.PI,3)+5*h;const o=Math.sqrt(r*r+n*n);t.velx+=o*Math.cos(t.parts[0].radian)/10*this.atTarget,t.vely+=o*Math.sin(t.parts[0].radian)/10*this.atTarget}}move(t,s){this.x+=t,this.y+=s,this.nextPart&&this.nextPart.move(t,s)}getPoint(t,s){return[this.x+t*Math.cos(s+this.radian),this.y+t*Math.sin(s+this.radian)]}}class e{constructor(t,s){this.changeCount=0,this.fish=t,this.pieces=[[],[],[],[],[]],this.radius=s,this.pieceLength=2*this.radius,this.tip=t.parts[this.fish.parts.length-1],this.maxAngle=this.tip.maxAngle;for(let t=0;t<3;t++)this.pieces[2].push(new a(this,this.pieces[2][t-1],0));for(let t=0;t<5;t++)this.pieces[1].push(new a(this,this.pieces[1][t-1],1));for(let t=0;t<8;t++)this.pieces[0].push(new a(this,this.pieces[0][t-1],2));for(let t=0;t<5;t++)this.pieces[3].push(new a(this,this.pieces[3][t-1],-1));for(let t=0;t<8;t++)this.pieces[4].push(new a(this,this.pieces[4][t-1],-2))}change(){const t=3*Math.random();t<1?this.pieces[2].push(new a(this,this.pieces[2][this.pieces[2].length-1],0)):t<2?(this.pieces[1].push(new a(this,this.pieces[1][this.pieces[1].length-1],1)),this.pieces[3].push(new a(this,this.pieces[3][this.pieces[3].length-1],-1))):(this.pieces[0].push(new a(this,this.pieces[0][this.pieces[0].length-1],2)),this.pieces[4].push(new a(this,this.pieces[4][this.pieces[4].length-1],-2)))}updateRadius(t){this.radius=t,this.pieceLength=2*this.radius,this.tip=this.fish.parts[this.fish.parts.length-1],this.maxAngle=this.tip.maxAngle;for(let t=0;t<5;t++)this.pieces[t][0].prevPart=this.tip}act(){this.tip=this.fish.parts[this.fish.parts.length-1];for(let t=0;t<this.pieces[2].length;t++)this.pieces[2][t].act(this);for(let t=0;t<this.pieces[1].length;t++)this.pieces[1][t].act(this);for(let t=0;t<this.pieces[0].length;t++)this.pieces[0][t].act(this);for(let t=0;t<this.pieces[3].length;t++)this.pieces[3][t].act(this);for(let t=0;t<this.pieces[4].length;t++)this.pieces[4][t].act(this)}render(t){this.act(),t.fillStyle=`rgba(${this.fish.colors[this.fish.baseColor][0]},${this.fish.colors[this.fish.baseColor][1]},${this.fish.colors[this.fish.baseColor][2]},.4)`;for(let s=0;s<this.pieces.length-1;s++){t.beginPath(),t.moveTo(...this.tip.getPoint(0,0));for(let i=0;i<this.pieces[s].length;i++)t.lineTo(this.pieces[s][i].x,this.pieces[s][i].y);for(let i=this.pieces[s+1].length-1;i>-1;i--)t.lineTo(this.pieces[s+1][i].x,this.pieces[s+1][i].y);t.fill(),t.closePath()}t.strokeStyle=`rgba(${.8*this.fish.colors[this.fish.baseColor][0]},${.8*this.fish.colors[this.fish.baseColor][1]},${.8*this.fish.colors[this.fish.baseColor][2]},.3)`,t.lineWidth=1;for(let s=0;s<this.pieces.length;s++){t.beginPath(),t.moveTo(...this.tip.getPoint(0,0));for(let i=0;i<this.pieces[s].length;i++)t.lineTo(this.pieces[s][i].x,this.pieces[s][i].y);t.stroke(),t.closePath()}}}class a{constructor(t,s,i){this.prevPart=s,this.offset=i,this.velx=0,this.vely=0,this.x=null,this.y=null,this.prevPart||(this.prevPart=t.tip),this.radian=this.prevPart.radian,this.maxAngle=this.prevPart.maxAngle,[this.x,this.y]=this.prevPart.getPoint(t.pieceLength,this.prevPart.radian+Math.PI)}act(t){let s=this.x,i=this.y;this.x+=this.velx,this.y+=this.vely,this.updateRadian();let h=this.radian+this.offset/3-this.prevPart.radian;if(h>Math.PI?h-=2*Math.PI:h<-Math.PI&&(h+=2*Math.PI),Math.abs(h)>t.maxAngle)if(h>0)if(h-t.maxAngle>t.maxAngle/2){const s=this.prevPart.radian+Math.PI+t.maxAngle;this.x=this.prevPart.x+t.pieceLength*Math.cos(s),this.y=this.prevPart.y+t.pieceLength*Math.sin(s)}else this.x=this.prevPart.x+t.pieceLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+t.pieceLength*Math.sin(this.radian+Math.PI);else if(h+t.maxAngle<-t.maxAngle/2){const s=this.prevPart.radian+Math.PI-t.maxAngle;this.x=this.prevPart.x+t.pieceLength*Math.cos(s),this.y=this.prevPart.y+t.pieceLength*Math.sin(s)}else this.x=this.prevPart.x+t.pieceLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+t.pieceLength*Math.sin(this.radian+Math.PI);else this.x=this.prevPart.x+t.pieceLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+t.pieceLength*Math.sin(this.radian+Math.PI);this.velx=(this.velx+this.x-s)/5,this.vely=(this.vely+this.y-i)/5}rotate(t){const s=Math.sin(t),i=Math.cos(t),h=this.x-this.prevPart.x,e=this.y-this.prevPart.y;this.x=h*i-e*s+this.prevPart.x,this.y=h*s+e*i+this.prevPart.y}updateRadian(){const t=this.prevPart.x-this.x,s=this.prevPart.y-this.y;0===t&&(s<0&&(this.radian=3*Math.PI/2),this.radian=Math.PI/2);const i=Math.atan(s/t);this.radian=t>0?i:-Math.PI+i}getPoint(t,s){return[this.x+t*Math.cos(s+this.radian),this.y+t*Math.sin(s+this.radian)]}}class r{constructor(t,s){this.fish=t,this.fins=[new n(t,1,0,s),new n(t,-1,0,s),new n(t,1,.3,s),new n(t,-1,.3,s)],this.radius=s,this.tip=t.parts[this.fish.parts.length-1],this.maxAngle=this.tip.maxAngle}updateRadius(t){for(let s=0;s<this.fins.length;s++)this.fins[s].updateRadius(t)}change(){const t=2*Math.random();t>1?(this.fins[0].change(t/2),this.fins[1].change(t/2)):(this.fins[2].change(t/2),this.fins[3].change(t/2))}act(){for(let t=0;t<this.fins.length;t++)this.fins[t].act()}render(t){this.act();for(let s=0;s<this.fins.length;s++)this.fins[s].render(t)}}class n{constructor(t,s,i,h){this.fish=t,this.side=s,this.ratio=i,this.radius=h,this.part=t.parts[Math.floor(t.parts.length*i)],this.pieceLength=3*this.radius+1,this.pieces=[[new o(this,void 0,this.side,0)],[new o(this,void 0,this.side,1)],[new o(this,void 0,this.side,2)],[new o(this,void 0,this.side,3)],[new o(this,void 0,this.side,4)],[new o(this,void 0,this.side,5)],[new o(this,void 0,this.side,6)]];for(let t=0;t<7;t++)for(let s=0;s<5-t/2;s++)this.pieces[t].push(new o(this,this.pieces[t][s],this.side,t))}updateRadius(t){this.radius=t,this.pieceLength=3*this.radius+1,this.part=this.fish.parts[Math.floor(this.fish.parts.length*this.ratio)]}change(t){const s=Math.floor(t*this.pieces.length),i=this.pieces[s][this.pieces[s].length-1];this.pieces[s].push(new o(this,i,this.side,s))}act(){for(let t=0;t<this.pieces.length;t++)for(let s=0;s<this.pieces[t].length;s++)this.pieces[t][s].act()}render(t){t.fillStyle=`rgba(${this.fish.colors[this.fish.baseColor][0]},${this.fish.colors[this.fish.baseColor][1]},${this.fish.colors[this.fish.baseColor][2]},.4)`;for(let s=0;s<this.pieces.length-1;s++){t.beginPath(),t.moveTo(this.pieces[s][0].x,this.pieces[s][0].y);for(let i=1;i<this.pieces[s].length;i++)t.lineTo(this.pieces[s][i].x,this.pieces[s][i].y);for(let i=this.pieces[s+1].length-1;i>-1;i--)t.lineTo(this.pieces[s+1][i].x,this.pieces[s+1][i].y);t.fill(),t.closePath()}t.strokeStyle=`rgba(${.8*this.fish.colors[this.fish.baseColor][0]},${.8*this.fish.colors[this.fish.baseColor][1]},${.8*this.fish.colors[this.fish.baseColor][2]},.2)`,t.lineWidth=1;for(let s=0;s<this.pieces.length;s++){t.beginPath(),t.moveTo(this.pieces[s][0].x,this.pieces[s][0].y);for(let i=1;i<this.pieces[s].length;i++)t.lineTo(this.pieces[s][i].x,this.pieces[s][i].y);t.stroke(),t.closePath()}}}class o{constructor(t,s,i,h){this.fin=t,this.prevPart=s,this.side=i,this.finOffset=-this.side*(.3*(1-this.fin.ratio)-5*this.fin.ratio),this.bias=i*h*Math.PI/8,this.velx=0,this.vely=0,this.x=null,this.y=null,this.radian=null,this.maxAngle=null,this.prevPart?(this.maxAngle=this.prevPart.maxAngle,this.radian=this.prevPart.radian,[this.x,this.y]=this.prevPart.getPoint(this.fin.pieceLength,Math.PI)):([this.x,this.y]=this.fin.part.getPoint(9*this.fin.part.radius,this.side*Math.PI/2+this.finOffset),this.maxAngle=this.fin.part.maxAngle*this.fin.ratio,this.radian=this.fin.part.radian+Math.PI/2*-this.side+this.finOffset/2+this.bias)}act(){if(this.prevPart){this.maxAngle=this.prevPart.maxAngle;let t=this.x,s=this.y;this.x+=this.velx,this.y+=this.vely,this.updateRadian();let i=this.radian-this.prevPart.radian;i>Math.PI?i-=2*Math.PI:i<-Math.PI&&(i+=2*Math.PI),i>0?i>this.maxAngle?[this.x,this.y]=this.prevPart.getPoint(this.fin.pieceLength,Math.PI+this.maxAngle):(this.x=this.prevPart.x+this.fin.pieceLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+this.fin.pieceLength*Math.sin(this.radian+Math.PI)):i<-this.maxAngle?[this.x,this.y]=this.prevPart.getPoint(this.fin.pieceLength,Math.PI-this.maxAngle):(this.x=this.prevPart.x+this.fin.pieceLength*Math.cos(this.radian+Math.PI),this.y=this.prevPart.y+this.fin.pieceLength*Math.sin(this.radian+Math.PI)),this.velx=(this.velx+this.x-t)/5,this.vely=(this.vely+this.y-s)/5}else[this.x,this.y]=this.fin.part.getPoint(9*this.fin.part.radius,this.side*Math.PI/2+this.finOffset),this.maxAngle=this.fin.part.maxAngle*this.fin.ratio,this.radian=this.fin.part.radian+Math.PI/2*-this.side+this.finOffset/2+this.bias}updateRadian(){const t=this.prevPart.x-this.x,s=this.prevPart.y-this.y;0===t&&(s<0&&(this.radian=3*Math.PI/2),this.radian=Math.PI/2);const i=Math.atan(s/t);this.radian=t>0?i:-Math.PI+i}getPoint(t,s){return[this.x+t*Math.cos(s+this.radian),this.y+t*Math.sin(s+this.radian)]}}t.exports=class{constructor({mass:t,x:a,y:n,direction:o,pond:l}){this.colors=[[70,70,70],[226,79,24],[255,245,45],[253,230,230]],this.baseColor=Math.floor(Math.random()*this.colors.length),this.pond=l,this.counter=0,this.mass=t||50,this.segmentLength=10,this.velx=0,this.vely=0,this.target=null,this.targetDir=Math.PI/4+Math.PI/2;const p=o||Math.random()*Math.PI*2,d=Math.cbrt(this.mass/((5+Math.floor(Math.log(this.mass)))*Math.PI));this.mouth=new s({radius:d/2}),this.head=new i({radius:d,radian:p,prevPart:this.mouth,x:a,y:n});const c=(this.head.mass+this.mouth.mass)/this.mass;let g;this.parts=[],this.parts.push(new h({radius:d,prevPart:this.head,segmentLength:10*this.head.radius,fish:this})),this.head.setNextPart(this.parts[0]);for(let t=1;this.parts[t-1].radius>.5;t++)g=new h({radius:this.parts[t-1].radius-c,prevPart:this.parts[t-1],segmentLength:this.segmentLength,fish:this}),this.parts[t-1].setNextPart(g),this.parts.push(g);this.tail=new e(this,this.head.radius),this.fins=new r(this,this.head.radius)}updateTargetDir(t,s){if(!this.target)return this.target=null;const i=this.target.x-this.mouth.x,h=this.target.y-this.mouth.y;0===i&&(h<0&&(this.targetDir=3*Math.PI/2),this.targetDir=Math.PI/2);const e=Math.atan(h/i);this.targetDir=i>0?e:-Math.PI+e}foodNotify(t){this.target&&t.getDistance(this.mouth.x,this.mouth.y)<this.target.getDistance(this.mouth.x,this.mouth.y)?this.target=t:this.target||(this.target=t)}feed(t){this.updateMass(this.mass+t),this.change()}change(){if(this.counter++,this.counter>1){this.counter=0;const t=3*Math.random();t<1?this.tail.change():(t<2||this.tail.change(),this.fins.change())}}updateMass(t){this.mass=t>50?t:50;const s=Math.cbrt(this.mass/((5+Math.floor(Math.log(this.mass)))*Math.PI));this.mouth.updateRadius(s/2),this.head.updateRadius(s),this.parts[0].updateRadius(s,this);const i=(this.head.mass+this.mouth.mass)/this.mass;let e;for(let t=1;this.parts[t-1].radius>.5;t++)this.parts[t]?this.parts[t].updateRadius(this.parts[t-1].radius-i,this):(e=new h({radius:this.parts[t-1].radius-i,prevPart:this.parts[t-1],segmentLength:this.segmentLength,fish:this}),this.parts[t-1].setNextPart(e),this.parts.push(e));this.tail.updateRadius(this.head.radius),this.fins.updateRadius(this.head.radius)}render(t){if(this.target)if(0===this.target.value){let t=this.pond.getClosestFood();t&&(this.target=t)}else this.target.value<0&&(this.target=this.pond.getClosestFood(),null===this.target&&(this.target=this.pond.getSpot(this.mouth.x,this.mouth.y)));else this.target=this.pond.getClosestFood(this.mouth.x,this.mouth.y),this.target||(this.target=this.pond.getSpot());this.updateTargetDir(),this.newvelx=0,this.newvely=0,this.parts[0].act(this),this.velx*=.97,this.vely*=.97,this.move(this.newvelx+this.velx,this.newvely+this.vely),this.pond.bite(this.mouth.x,this.mouth.y,this.mouth.radius,this),this.drawFish(t)}drawFish(t){let s;for(this.fins.render(t),t.fillStyle=`rgb(${this.colors[this.baseColor][0]},${this.colors[this.baseColor][1]},${this.colors[this.baseColor][2]})`,t.beginPath(),t.moveTo(...this.head.getPoint(8*this.head.radius,Math.PI/2)),s=0;s<this.parts.length-1;s++)t.lineTo(...this.parts[s].getPoint(8*this.parts[s].radius,Math.PI/2));for(t.lineTo(...this.parts[this.parts.length-1].getPoint(0,0)),s=this.parts.length-2;s>-1;s--)t.lineTo(...this.parts[s].getPoint(8*this.parts[s].radius,-Math.PI/2));for(t.lineTo(...this.head.getPoint(8*this.head.radius,-Math.PI/2)),t.fill(),t.closePath(),t.beginPath(),t.moveTo(...this.head.getPoint(8*this.head.radius,Math.PI/2+.1)),t.lineTo(...this.head.getPoint(9*this.head.radius,Math.PI/3)),t.lineTo(...this.head.getPoint(10.5*this.head.radius,Math.PI/5)),t.lineTo(...this.head.getPoint(11*this.head.radius,Math.PI/6)),t.quadraticCurveTo(...this.head.getPoint(20*this.head.radius,0),...this.head.getPoint(11*this.head.radius,-Math.PI/6)),t.lineTo(...this.head.getPoint(10.5*this.head.radius,-Math.PI/5)),t.lineTo(...this.head.getPoint(9*this.head.radius,-Math.PI/3)),t.lineTo(...this.head.getPoint(8*this.head.radius,-Math.PI/2-.1)),t.fill(),t.closePath(),this.tail.render(t),t.fillStyle=`rgb(${.8*this.colors[this.baseColor][0]},${.8*this.colors[this.baseColor][1]},${.8*this.colors[this.baseColor][2]})`,t.beginPath(),t.moveTo(...this.parts[Math.floor(this.parts.length/5)].getPoint(0,0)),s=Math.floor(this.parts.length/5)+1;s<Math.floor(3*this.parts.length/4)+1;s++)t.lineTo(...this.parts[s].getPoint(2*this.parts[s].radius,Math.PI/2));for(t.lineTo(...this.parts[Math.floor(3*this.parts.length/4)].getPoint(0,0)),s=Math.floor(3*this.parts.length/4)+1;s>Math.floor(this.parts.length/5);s--)t.lineTo(...this.parts[s].getPoint(2*this.parts[s].radius,-Math.PI/2));t.fill(),t.closePath()}move(t,s){this.head.move(t,s)}}},440:(t,s,i)=>{const h=i(388),e=i(444),a=i(657);t.exports=class{constructor(t){this.var=.001,this.maxFood=30,this.maxFish=30,this.window=t,this.height=this.window.innerHeight,this.width=this.window.innerWidth,this.vh=this.height/100,this.vw=this.width/100,this.c=0,this.spots=[new e(0,0,0)];for(let t=1;t<100;t++)this.spots.push(new e(0,0,0,this.spots[t-1]));this.spots[0].nextSpot=this.spots[this.spots.length-1];const s=this.height/2,i=this.width/2;for(let t=0;t<Math.floor(this.spots.length)/2;t++)this.spots[t].x=i+Math.random()*i*Math.cos(t),this.spots[t].y=s+Math.random()*s*Math.sin(t);for(let t=Math.floor(this.spots.length/2);t<this.spots.length;t++)this.spots[t].x=i+(i/4+Math.random()*i/1.5)*Math.cos(-t),this.spots[t].y=s+(s/3+Math.random()*s/2)*Math.sin(-t);this.foods=[],this.fish=[],this.ripples=[],this.numberOfFish=5;for(let t=0;t<5;t++)this.addFish()}start(t){const s=this.height,i=this.width;this.height=this.window.innerHeight-20,this.width=this.window.innerWidth-20,t.height=this.window.innerHeight-20,t.width=this.window.innerWidth-20,console.log("INITIALIZING WATER MODEL");var h=new a.WaterModel(this.width,this.height,{resolution:2,interpolate:!1,damping:.985,clipping:5,evolveThreshold:.05,maxFps:30,showStats:!0});console.log("INITIALIZING WATER CANVAS"),this.watercanvas=new a.WaterCanvas(this,h,{lightRefraction:9,lightReflection:.1,maxFps:20,showStats:!0}),console.log("INITIALIZING RAIN DROPS");var e=a.create2DArray(a.createRadialCanvas(4,4));new a.RainMaker(this.width,this.height,h,e).setRaindropsPerSecond(1),a.enableMouseInteraction(h);const r=t.getContext("2d"),n=()=>{if(this.vh=this.height/100,this.vw=this.width/100,i!==this.width||s!==this.height){const t=this.height/2,s=this.width/2;for(let i=0;i<Math.floor(this.spots.length)/2;i++)this.spots[i].x=s+Math.random()*s*Math.cos(i),this.spots[i].y=t+Math.random()*t*Math.sin(i);for(let i=Math.floor(this.spots.length/2);i<this.spots.length;i++)this.spots[i].x=s+(s/4+Math.random()*s/1.5)*Math.cos(-i),this.spots[i].y=t+(t/3+Math.random()*t/2)*Math.sin(-i)}this.render(r),setTimeout(n,1e3/30)},o=()=>{this.numberOfFish<this.maxFish&&(this.addFish(),this.numberOfFish+=1),setTimeout(o,1e4)};n(),o()}render(t){t.globalAlpha=1,t.fillStyle="#66ccff",t.fillRect(0,0,this.width,this.height),t.globalAlpha=.7,t.globalAlpha=.3,t.globalAlpha=.9,this.fish.sort(((t,s)=>s.mass-t.mass));for(let s=0;s<this.fish.length;s++)this.fish[s].render(t);for(let s=0;s<this.foods.length;s++)this.foods[s].render(t);this.watercanvas.drawNextFrame(),this.fontSize=10*this.vh,this.width/20<this.fontSize&&(this.fontSize=5*this.vw)}click(t,s){let i=new e(t,s,3);if(t>0&&s>this.height-4*this.vh-.5*this.fontSize&&t<4*this.vh+this.textWidth&&s<this.height-4*this.vh-.5*this.fontSize+.5*this.fontSize+4*this.vh)this.addFish(),this.var+=.001;else{this.foods.length<this.maxFood||(this.foods[0].value=-1,this.foods.shift()),this.foods.push(i);for(let t=0;t<this.fish.length;t++)this.fish[t].foodNotify(i)}}addFish(){let t,s,i,e=2*Math.random();e>1?(s=this.height/2,e=2*Math.random(),e>1?(t=-50,i=1e-4):(t=50+this.width,i=Math.PI)):(e=2*Math.random(),t=this.width/2,e>1?(s=-100,i=Math.PI/2):(s=this.height+100,i=Math.PI/2*3)),this.fish.push(new h({mass:35+Math.sqrt(1e4*Math.random())+this.var,x:t,y:s,pond:this,direction:i}))}getClosestFood(t,s){if(this.foods.length<1)return null;let i=this.foods[0];for(let h=1;h<this.foods.length;h++)this.foods[h].getDistance(t,s)<i.getDistance(t,s)&&(i=this.foods[h]);return i}getSpot(){return this.spots[Math.floor(this.spots.length*Math.random())]}bite(t,s,i,h){for(let e=0;e<this.foods.length;e++)this.foods[e].getDistance(t,s)<i+10&&(this.foods[e].eaten(h),this.foods.splice(e,1),e--);if(h.target&&0===h.target.value)for(let i=0;i<this.spots.length;i++)this.spots[i].getDistance(t,s)<200&&this.spots[i].eaten(h)}}},444:t=>{t.exports=class{constructor(t,s,i,h){this.value=i,this.x=t,this.y=s,this.nextSpot=h,this.colors=[[212,168,72],[123,101,57],[212,112,46],[169,155,60]],this.baseColor=Math.floor(Math.random()*this.colors.length),this.baseColor=`rgb(${this.colors[this.baseColor][0]},${this.colors[this.baseColor][1]},${this.colors[this.baseColor][2]})`}getDistance(t,s){const i=this.x-t,h=this.y-s;return Math.sqrt(i*i+h*h)}eaten(t){0===this.value&&this==t.target?t.target=this.nextSpot:this.value>0&&(t.target=null,t.feed(this.value),this.value=-1)}render(t){this.value>0&&(t.fillStyle=this.baseColor,t.beginPath(),t.arc(this.x,this.y,3,0,2*Math.PI,!0),t.fill(),t.closePath())}}},657:t=>{function s(t,s){var i=document.createElement("canvas");i.setAttribute("width",t),i.setAttribute("height",s),pointerCtx=i.getContext("2d");var h=pointerCtx.createRadialGradient(t/2,s/2,0,t/2,s/2,s/2);return h.addColorStop(0,"#fff"),h.addColorStop(1,"#000"),pointerCtx.fillStyle=h,pointerCtx.fillRect(0,0,t,s),i}function i(t){for(var s=t.width,i=t.height,h=new Array(s),e=0;e<s;e++){h[e]=new Array(i);for(var a=0;a<i;a++)h[e][a]=0}for(var r=t.getContext("2d").getImageData(0,0,s,i).data,o=0;n=r.length,o<n;o+=4){var l=r[o]/255,p=o/4;a=(p-(e=p%s))/s,h[e][a]=l}return h}t.exports={create2DArray:i,createRadialCanvas:s,RainMaker:class{constructor(t,s,i,h){this.width=t,this.height=s,this.waterModel=i,this.raindrop2dArray=h,this.rainMinPressure=1,this.rainMaxPressure=3}raindrop(){var t=Math.floor(Math.random()*this.width),s=Math.floor(Math.random()*this.height);this.waterModel.touchWater(t,s,this.rainMinPressure+Math.random()*this.rainMaxPressure,this.raindrop2dArray)}setRaindropsPerSecond(t){if(this.rps=t,clearInterval(this.rainInterval),this.rps>0){var s=this;this.rainInterval=setInterval((function(){s.raindrop()}),1e3/this.rps)}}setRainMinPressure(t){this.rainMinPressure=t}setRainMaxPressure(t){this.rainMaxPressure=t}},WaterCanvas:class{constructor(t,s,i){if(i=i||{},this.lightRefraction=i.lightRefraction||9,this.lightReflection=i.lightReflection||.1,this.showStats=i.showStats||!1,this.pond=t,this.waterModel=s,this.canvas=document.getElementById("pond"),this.canvasHelp=document.getElementById("pond"),this.canvas.getContext&&this.canvasHelp.getContext){if(this.ctx=this.canvas.getContext("2d"),this.ctxHelp=this.canvasHelp.getContext("2d"),this.fps=-1,this.showStats){this.fpsCounter=0,this.prevMs=0;var h=this;setInterval((function(){h.findFps()}),1e3)}}else alert("You need a browser that supports the HTML5 canvas tag.")}drawNextFrame(){if(this.waterModel.isEvolving()){this.pixelsIn=this.ctx.getImageData(0,0,this.pond.width,this.pond.height).data;for(var t=this.ctx.getImageData(0,0,this.pond.width,this.pond.height),s=t.data,i=0;n=s.length,i<n;i+=4){var h=i/4,e=h%this.pond.width,a=(h-e)/this.pond.width,r=this.waterModel.getWater(e,a),o=Math.round(r*this.lightRefraction),l=e+o,p=a+o;l<0&&(l=0),p<0&&(p=0),l>this.pond.width-1&&(l=this.pond.width-1),p>this.pond.height-1&&(p=this.pond.height-1);var d=4*(p*this.pond.width+l),c=this.pixelsIn[d],g=this.pixelsIn[d+1],f=this.pixelsIn[d+2];r*=this.lightReflection,r+=1,s[i]=c*=r,s[i+1]=g*=r,s[i+2]=f*=r,s[i+3]=255}this.ctx.putImageData(t,0,0)}}findFps(){if(this.showStats){var t=(new Date).getTime(),s=t-this.prevMs;this.fps=Math.round(1e3*this.fpsCounter/s*10)/10,this.prevMs=t,this.fpsCounter=0}}getFps(){return this.fps}setLightRefraction(t){this.lightRefraction=t}setLightReflection(t){this.lightReflection=t}},WaterModel:class{constructor(t,s,i){if(i=i||{},this.resolution=i.resolution||2,this.interpolate=i.interpolate||!1,this.damping=i.damping||.985,this.clipping=i.clipping||5,this.maxFps=i.maxFps||30,this.showStats=i.showStats||!1,this.evolveThreshold=i.evolveThreshold||.05,this.width=Math.ceil(t/this.resolution),this.height=Math.ceil(s/this.resolution),this.resetSizeAndResolution(t,s,this.resolution),this.swapMap,this.setMaxFps(this.maxFps),this.evolving=!1,this.fps=-1,this.showStats){this.fpsCounter=0,this.prevMs=0;var h=this;setInterval((function(){h.findFps()}),1e3)}}getWater(t,s){let i=t/this.resolution,h=s/this.resolution;if(!this.interpolate||1==this.resolution){let t=Math.floor(i),s=Math.floor(h);return t>this.width-1||s>this.height-1?0:this.depthMap1[t][s]}let e=Math.floor(i),a=Math.floor(h),r=Math.ceil(i),n=Math.ceil(h);if(r>this.width-1||n>this.height-1)return 0;var o=this.depthMap1[e][a],l=this.depthMap1[r][a],p=this.depthMap1[e][n],d=r-i,c=n-h;return this.depthMap1[r][n]*(1-d)*(1-c)+p*d*(1-c)+l*c*(1-d)+o*d*c}setInterpolation(t){this.interpolate=t}touchWater(t,s,i,h){this.evolving=!0,t=Math.floor(t/this.resolution),s=Math.floor(s/this.resolution),(h.length>4||h[0].length>4)&&(t-=h.length/2,s-=h[0].length/2),t<0&&(t=0),s<0&&(s=0),t>this.width&&(t=this.width),s>this.height&&(s=this.height);for(var e=0;e<h.length;e++)for(var a=0;a<h[0].length;a++)t+e>=0&&s+a>=0&&t+e<=this.width-1&&s+a<=this.height-1&&(this.depthMap1[t+e][s+a]-=h[e][a]*i)}renderNextFrame(){if(this.evolving){this.evolving=!1;for(var t=0;t<this.width;t++)for(var s=0;s<this.height;s++){var i=(0==t?0:this.depthMap1[t-1][s])+(t==this.width-1?0:this.depthMap1[t+1][s])+(0==s?0:this.depthMap1[t][s-1])+(s==this.height-1?0:this.depthMap1[t][s+1]);(i=(i/2-this.depthMap2[t][s])*this.damping)>this.clipping&&(i=this.clipping),i<-this.clipping&&(i=-this.clipping),Math.abs(i)>this.evolveThreshold&&(this.evolving=!0),this.depthMap2[t][s]=i}this.swapMap=this.depthMap1,this.depthMap1=this.depthMap2,this.depthMap2=this.swapMap,this.fpsCounter++}}isEvolving(){return this.evolving}findFps(){if(this.showStats){var t=(new Date).getTime(),s=t-this.prevMs;this.fps=Math.round(1e3*this.fpsCounter/s*10)/10,this.prevMs=t,this.fpsCounter=0}}getFps(){return this.fps}setMaxFps(t){this.maxFps=t,clearInterval(this.maxFpsInterval);var s=this;this.maxFps>0&&(this.maxFpsInterval=setInterval((function(){s.renderNextFrame()}),1e3/this.maxFps))}setDamping(t){this.damping=t}resetSizeAndResolution(t,s,i){this.width=Math.ceil(t/i),this.height=Math.ceil(s/i),this.resolution=i,this.depthMap1=new Array(this.width),this.depthMap2=new Array(this.width);for(var h=0;h<this.width;h++){this.depthMap1[h]=new Array(this.height),this.depthMap2[h]=new Array(this.height);for(var e=0;e<this.height;e++)this.depthMap1[h][e]=0,this.depthMap2[h][e]=0}}resetSizeAndResolution(t,s,i){this.width=Math.ceil(t/i),this.height=Math.ceil(s/i),this.resolution=i,this.depthMap1=new Array(this.width),this.depthMap2=new Array(this.width);for(var h=0;h<this.width;h++){this.depthMap1[h]=new Array(this.height),this.depthMap2[h]=new Array(this.height);for(var e=0;e<this.height;e++)this.depthMap1[h][e]=0,this.depthMap2[h][e]=0}}},enableMouseInteraction:function(t){var s=!1,i=document.getElementById("pond");i.addEventListener("mousedown",(function(a){s=!0;var r=a.clientX-i.offsetLeft+document.body.scrollLeft+document.documentElement.scrollLeft,n=a.clientY-i.offsetTop+document.body.scrollTop+document.documentElement.scrollTop;t.touchWater(r,n,1.5,s?e:h)}),!1),i.addEventListener("mouseup",(function(t){s=!1}),!1),i.addEventListener("mousemove",(function(a){var r=a.clientX-i.offsetLeft+document.body.scrollLeft+document.documentElement.scrollLeft,n=a.clientY-i.offsetTop+document.body.scrollTop+document.documentElement.scrollTop;t.touchWater(r,n,1.5,s?e:h)}),!1)}};const h=i(s(2,2)),e=i(s(14,14))}},s={};function i(h){var e=s[h];if(void 0!==e)return e.exports;var a=s[h]={exports:{}};return t[h](a,a.exports,i),a.exports}(()=>{const t=i(440),s=document.getElementById("pond");let h=new t(window);s.addEventListener("click",(function(t){const i=t.clientX-s.offsetLeft,e=t.clientY-s.offsetTop;h.click(i,e)})),h.start(s)})()})();